# Request Formats

## Retrieve resources with the HTTP GET Method

<%= partial "includes/Overview/Examples/retrieve.tmpl.erb" %>

You retrieve a representation of an object by sending an HTTP GET action to the resource's endpoint url. Filters can be specified for the request using a query string following the endpoint url. For example, you could GET a list of users, showing 5 per page and having the username 'frank' or 'fred' with the following:

## Create new resources with the HTTP POST Method

<%= partial "includes/Overview/Examples/create.tmpl.erb" %>

You can add a new object by sending an `HTTP POST` action to the resource's endpoint url. You must include a JSON representation of the object in your POST body, and the `Content-Type: application/json` header must be set in your request.

## Update existing resources with the HTTP PUT Method

<%= partial "includes/Overview/Examples/update.tmpl.erb" %>

You can edit an existing object by sending an `HTTP PUT` action to the resource's endpoint url. You must include a JSON representation of the object's modified properties in your PUT body, and the `Content-Type: application/json` header must be set in your request. For example, you could PUT changes using the user's unique id and the properties and values that you would like changed:

## Delete resources with the HTTP DELETE Method

<%= partial "includes/Overview/Examples/delete.tmpl.erb" %>

You can delete an existing object by sending an `HTTP DELETE` action to the resource's endpoint url. An `HTTP DELETE` is similar to a GET, where all relevant parameters are passed as part of a query string. You must include an identifying id of some sort for the object you would like to delete as part of your parameters.

_Note: Some endpoints which do not support DELETE instead allow items to be "archived" (aka soft deleted). For example, you can make a PUT call with `active=false` to the [Users](#update-users) endpoint to remove a user._

## Possible HTTP Response Status Codes

### 2xx response codes
All 2xx response codes indicate that the request was successful. The response body contains any details for the action requested.

### 3xx response codes
All 3xx response codes indicate that you need to look elsewhere for your result. The response body will contain directions on where you should be redirected to.

### 4xx response codes
All 4xx response codes indicate failure for the action requested. Following are the most common 4xx response codes:

|          |               |
| -------: | :------------ |
| <code class="level400s">400 Bad Request</code> | There was something wrong with your request. |
| <code class="level400s">401 Unauthorized</code> | You don't have sufficient permission to perform the action you requested. |
| <code class="level400s">402 Billing not current</code> | Your account billing is not current, so access was denied. |
| <code class="level400s">405 Method Not Allowed</code> | The action you are trying to perform is not allowed. |
| <code class="level400s">409 Conflict</code> | There is a conflict with the operation you're trying to perform (details in the response body). |
| <code class="level400s">413 Max Items Exceeded</code> | The number of objects you are listing or editing or adding is too large. |
| <code class="level400s">417 Expectation Failed</code> | Your request was missing required parameters or your request was somehow otherwise malformed. |
| <code class="level400s">429 Too Many Requests</code> | You have sent too many requests to the API in too short a time. You'll have to try your requests again later. |

### 5xx response codes
All 5xx response codes indicate a server error or exceptional condition on the TSheets side. Following are the most common 5xx response codes:

|          |               |
| -------: | :------------ |
| <code class="level500s">500 Internal Server Error</code> | There was an unspecified error on the TSheets side. Try your request again in a moment; if you receive the same error then wait a few minutes before repeating it, as we are probably working to correct it. If you continue to receive the error after several hours, contact us to report a bug. |
| <code class="level500s">501 Method not implemented</code> | This method is not implemented for this object. It may be in the future. |
| <code class="level500s">503 (Various messages)</code> | A _503_ response code indicates that the service is temporarily unavailable. Wait a few minutes for the condition to clear, and try again. |

### `_status_code`'s in the Response Body
Please note that the API will include a `_status_code` in the response body associated with each element that was passed in a `POST` or `PUT` request.  These `_status_code`'s will have similar values to the HTTP Response codes listed above, but they don't necessarily have the same meaning.  You can find documentation on each `_status_code` that may be returned as part of each API endpoint's documentation.

## Response Formats

<%= partial "includes/Overview/Examples/response_format.tmpl.erb" %>

TSheets returns resource representations as JSON, unless an exception occurs. Each JSON response object will contain the response data underneath an object property labeled 'results'.

For GET requests, in the response body there will also be a boolean with the name, "more". If true, it means that there is another page of objects that can be retrieved. Otherwise _false_ will be the value.

If the resource object references any other objects via an id (i.e. `group_id`), a corresponding JSON representation of that object will be contained in another top level property labeled `supplemental_data`.

## Exceptions

TSheets returns exceptions in the HTTP response body when something goes wrong. An exception has the following properties:

| Property    | Description |
| :---------- | :---------- |
| **code**    | The HTTP status code for the exception. |
| **message** | A descriptive message regarding the exception. |
